name: Zip and Checksum on Release

on:
  release:
    types: [published]

env:
  TARGET_REF: ${{ github.event.release.tag_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ env.TARGET_REF }}

      - name: Set Up Node.js
        uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Get Package Info
        id: package_info
        run: |
          echo "PACKAGE_NAME=$(node -p "require('./package.json').name")" >> $GITHUB_ENV
          echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Generate Checksum File
        run: |
          checksum_file="checksum.md5"
          find . \
            -type f \
            -not -path '*/.*' \
            -not -name '*.zip' \
            -not -name '*.tar.gz' \
            -not -name '*.md5' \
            -not -name '*.dist' \
            -not -name '*.gif' \
            -not -name '*.html' \
            -not -name '*.json' \
            -not -name '*.log' \
            -not -name '*.lock' \
            -not -name '*.md' \
            -not -name '*.neon' \
            -not -name '*.scss' \
            -not -name '*.sh' \
            -not -name '*.xml' \
            -not -path '*/assets/scss/*' \
            -not -path '*/bin/*' \
            -not -path '*/node_modules/*' \
            -not -path '*/tests/*' \
            -not -path '*/vendor/*' \
            -not -path '*/unit-tests/*' \
            -exec md5sum {} + > $checksum_file

      - name: Create ZIP Archive
        run: |
          zip -r "${{ env.PACKAGE_NAME }}-${{ env.PACKAGE_VERSION }}.zip" . \
            -x '.*' \
            '!**/*.{dist,gif,html,jpg,jpeg,js,json,log,lock,md,neon,png,scss,sh,txt,xml,zip}' \
            '!/.*' \
            '!assets/js/**' \
            '!assets/images/**' \
            '!assets/scss/**' \
            '!assets/**/*.scss' \
            '!bin/**' \
            '!node_modules/**' \
            '!tests/**' \
            '!vendor/**' \
            '!unit-tests/**' \
            'readme.txt' \
            'checksum.md5'
        shell: bash

      - name: Create TAR.GZ Archive
        run: |
          tar -czf "${{ env.PACKAGE_NAME }}-${{ env.PACKAGE_VERSION }}.tar.gz" . \
            --exclude='**/*.{dist,gif,html,jpg,jpeg,js,json,log,lock,md,neon,png,scss,sh,txt,xml,zip}' \
            --exclude='.*' \
            --exclude='assets/scss/**' \
            --exclude='bin/**' \
            --exclude='node_modules/**' \
            --exclude='tests/**' \
            --exclude='vendor/**' \
            --exclude='unit-tests/**' \
            assets/js/** \
            assets/images/** \
            readme.txt \
            checksum.md5
        shell: bash

      - name: Save Artifacts for Upload Job
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            ${{ env.PACKAGE_NAME }}-${{ env.PACKAGE_VERSION }}.zip
            ${{ env.PACKAGE_NAME }}-${{ env.PACKAGE_VERSION }}.tar.gz
            checksum.md5
          retention-days: 1

  upload:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: build-artifacts
          merge-multiple: true
      - run: ls -R build-artifacts

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ env.TARGET_REF }}

      - name: Get Package Info
        id: package_info
        run: |
          echo "PACKAGE_NAME=$(node -p "require('./package.json').name")" >> $GITHUB_ENV
          echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TARGET_REF }}
          files: |
            ${{ env.PACKAGE_NAME }}-${{ env.PACKAGE_VERSION }}.zip
            ${{ env.PACKAGE_NAME }}-${{ env.PACKAGE_VERSION }}.tar.gz
            checksum.md5
          token: ${{ secrets.GITHUB_TOKEN }}
